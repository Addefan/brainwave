from os import environ
import sqlite3
import datetime
import telebot
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_BOT_TOKEN = environ.get("TELEGRAM_BOT_TOKEN")
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)


def get_greeting_text():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    :return: str
    """
    return "üëã –ü—Ä–∏–≤–µ—Ç, —è  - —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–¥–∞–Ω–∏—è, " \
           "–∞ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏"


def get_input_error_text():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    :return: str
    """
    return "‚úñ –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑"


def get_thanks_text():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    :return: str
    """
    return "üòä –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!"


def get_text_no_tasks_until_deadline():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
    :return: str
    """
    return "‚úñ –ù–µ—Ç –∑–∞–¥–∞–Ω–∏–π –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –¥–µ–¥–ª–∞–π–Ω–∞!"


def get_text_successfully_adding_task():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
    :return: str
    """
    return "‚òë –ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!"


def get_text_successfully_deletion_task():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ
    :return: str
    """
    return "‚òë –ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!"


def get_text_successfully_adding_event():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
    :return: str
    """
    return "‚òë –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!"


def get_text_successfully_deletion_event():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ
    :return: str
    """
    return "‚òë –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!"


def get_text_successfully_deletion_events():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω—ã
    :return: str
    """
    return "‚òë –°–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!"


def get_text_no_tasks():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π
    :return: str
    """
    return "‚úñ –£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!"


def get_text_no_events_on_this_day():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    :return: str
    """
    return "‚úñ –£ –≤–∞—Å –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å!"


def get_text_limit_exceeded():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–ª—å–∑—è –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª–µ–µ, —á–µ–º –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥
    :return: str
    """
    return "‚úñ –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –±–æ–ª–µ–µ, —á–µ–º –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä—ë–¥"


def request_enter_deadline_date_for_tasks():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É, –¥–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –¥–æ –∫–∞–∫–æ–≥–æ –¥–Ω—è –≤—ã–≤–µ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è.\n" \
           "–î–î.–ú–ú.–ì–ì–ì–ì\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ 10.05.2022"


def request_enter_task_and_deadline():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏–µ –∏ –µ–≥–æ –¥–µ–¥–ª–∞–π–Ω
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –µ–≥–æ –¥–µ–¥–ª–∞–π–Ω.\n" \
           "–ó–∞–¥–∞–Ω–∏–µ –î–î.–ú–ú.–ì–ì–ì–ì\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ –°–¥–µ–ª–∞—Ç—å –î–ó –ø–æ –º–∞—Ç–∞–Ω—É 10.05.2022"


def request_enter_number_task():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ 1"


def request_enter_number_event():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–≥–æ —Å–æ–±—ã—Ç–∏—è\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ 1"


def request_enter_date_to_view_schedule():
    """
    –ü–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n" \
           "–î–î.–ú–ú.–ì–ì–ì–ì\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ 10.05.2022"


def request_enter_event_and_date_to_add():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ, –¥–∞—Ç—É, –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è.\n" \
           "–î–î.–ú–ú.–ì–ì–ì–ì —á—á:–º–º —á—á:–º–º\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ –ú–∞—Ç–∞–Ω (–ø—Ä–∞–∫—Ç–∏–∫–∞) 10.05.2022 08:30 10:00"


def request_enter_date_to_delete_event():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ.\n" \
           "–î–î.–ú–ú.–ì–ì–ì–ì\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ 10.05.2022"


def request_enter_type_and_period():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –∏ –µ–≥–æ –ø–µ—Ä–∏–æ–¥
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è (–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ–µ/–ø–æ–≤—Ç–æ—Ä—è—é—â–µ–µ—Å—è) –∏ –ø–µ—Ä–∏–æ–¥ (–≤ –¥–Ω—è—Ö), –µ—Å–ª–∏ –æ–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—é—â–µ–µ—Å—è\n" \
           "–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è –î–î\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ –ø 7"


def request_enter_deletion_type():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø—Ä–æ—Å—å–±–æ–π —É–∫–∞–∑–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é
    :return: str
    """
    return "–í–≤–µ–¥–∏—Ç–µ, –∫–∞–∫ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ: –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é\n" \
           "–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ç–∏–ø–∞ —É–¥–∞–ª–µ–Ω–∏—è\n\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä, üí¨ –µ"


def user_registration(message):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞),
    –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–µ—ë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ), –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    :param message: Message - –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    :return: None
    """
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (—Å–æ–∑–¥–∞–Ω–∏–µ) –∫ db –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users
    connect = sqlite3.connect('project.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS users(
            user_id INTEGER PRIMARY KEY 
        )""")
    connect.commit()

    # "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ id –≤ db, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ,
    # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = message.chat.id
    cursor.execute(f"SELECT user_id FROM users WHERE user_id = {user_id}")
    data = cursor.fetchone()
    if data is None:
        user_id = (user_id,)
        cursor.execute("INSERT INTO users VALUES(?);", user_id)
        connect.commit()
        bot.send_message(message.chat.id, get_greeting_text())
    else:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    cursor.close()


def date_to_datetime(date):
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—é—â–∞—è –¥–∞—Ç—É, –≤–≤–µ–¥—ë–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –æ–±—ä–µ–∫—Ç datetime.datetime
    :param date: str - –¥–∞—Ç–∞, –≤–≤–µ–¥—ë–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: datetime.datetime - –¥–∞—Ç–∞ –≤ –≤–∏–¥–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
    """
    try:
        return datetime.datetime.strptime(date, '%d.%m.%Y %H:%M')
    except ValueError:
        return datetime.datetime.strptime(date, '%d.%m.%Y')


def date_to_timestamp(date):
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—é—â–∞—è –¥–∞—Ç—É –≤ —Å–µ–∫—É–Ω–¥—ã –æ—Ç 01.01.1970
    :param date: datetime.datetime - –¥–∞—Ç–∞ –≤ –≤–∏–¥–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
    :return: float - –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    """
    return date.timestamp()


def date_view(date_timestamp, view):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –¥–∞—Ç—É, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì
    :param date_timestamp: float - –¥–∞—Ç–∞ –≤ –≤–∏–¥–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ–∫—É–Ω–¥ –æ—Ç 01.01.1970
    :param view: str - –≤–∏–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (date, time –∏–ª–∏ datetime)
    :return: str - –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì
    """
    if view == "date":
        return datetime.datetime.fromtimestamp(date_timestamp).strftime("%d.%m.%Y")
    if view == "time":
        return datetime.datetime.fromtimestamp(date_timestamp).strftime("%H:%M")
    if view == "datetime":
        return datetime.datetime.fromtimestamp(date_timestamp).strftime("%d.%m.%Y %H:%M")


def date_validation(date):
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã, –≤–≤–µ–¥—ë–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :param date: str - –¥–∞—Ç–∞, –≤–≤–µ–¥—ë–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: bool - –≤–∞–ª–∏–¥–Ω–∞ –¥–∞—Ç–∞ –∏–ª–∏ –Ω–µ—Ç
    """
    try:
        date_to_datetime(date)
    except ValueError:
        return False
    return True


def number_validation(number):
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞, –≤–≤–µ–¥—ë–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :param number: str - –Ω–æ–º–µ—Ä, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: bool - –≤–∞–ª–∏–¥–µ–Ω –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–µ—Ç
    """
    try:
        number = int(number)
    except ValueError:
        return False
    if number < 1:
        return False
    return True


def event_and_deletion_type_validation(event_type):
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    :param event_type: str - —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: bool - –≤–∞–ª–∏–¥–µ–Ω —Ç–∏–ø –∏–ª–∏ –Ω–µ—Ç
    """
    if event_type == '–ø' or event_type == '–µ':
        return True
    return False


def create_counter():
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Å—á—ë—Ç—á–∏–∫
    :return: function
    """
    i = 0

    def foo():
        """
        –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ i –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É
        :return: int
        """
        nonlocal i
        i += 1
        return i

    return foo


def schedule_date_limitation(date):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Ö–æ–¥–∏—Ç –ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ –æ–¥–Ω—É –Ω–µ–¥–µ–ª—é, —Å—á–∏—Ç–∞—è –æ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
    :param date: str - –¥–∞—Ç–∞, –≤–≤–µ–¥—ë–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: bool - –≤—Ö–æ–¥–∏—Ç –∏–ª–∏ –Ω–µ –≤—Ö–æ–¥–∏—Ç
    """
    today = date_to_datetime(date_view(datetime.datetime.today().timestamp(), 'date'))
    end = today + datetime.timedelta(days=7)
    if today <= date_to_datetime(date) < end:
        return True
    return False


def create_tasks_table():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã tasks –≤ –ë–î
    :return: None
    """
    connect = sqlite3.connect("project.db")
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS tasks(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            description TEXT,
            deadline TIMESTAMP,
            user_id INTEGER
        )""")
    connect.commit()
    connect.close()


def create_events_table():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã events –≤ –ë–î
    :return: None
    """
    connect = sqlite3.connect("project.db")
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS events(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            description TEXT,
            start_date TIMESTAMP,
            end_date TIMESTAMP,
            period TIMESTAMP, 
            user_id INTEGER
        )""")
    connect.commit()
    connect.close()
